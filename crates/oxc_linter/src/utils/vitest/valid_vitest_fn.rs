use std::{borrow::Cow, iter};

pub fn is_valid_vitest_call(members: &[Cow<str>]) -> bool {
    let mut members = members.iter().map(AsRef::as_ref);

    let Some(first) = members.next() else {
        return false;
    };
    let second = members.next();
    match first {
        "describe" | "suite" | "it" | "test"
            if second.is_some_and(|s| matches!(s, "runIf" | "skipIf")) =>
        {
            true
        }
        "describe" | "suite" => {
            let Some(second) = second else { return true };

            if matches!(second, "runIf" | "skipIf") {
                return members.next().is_none();
            }

            iter::once(second).chain(members).any(|member| {
                matches!(
                    member,
                    "skip"
                        | "only"
                        | "shuffle"
                        | "concurrent"
                        | "sequential"
                        | "todo"
                        | "each"
                        | "for"
                )
            })
        }
        "it" | "test" => {
            let Some(second) = second else { return true };

            if second == "extend" {
                return members.next().is_none();
            }

            iter::once(second).chain(members).any(|member| {
                matches!(
                    member,
                    "skip"
                        | "only"
                        | "concurrent"
                        | "sequential"
                        | "todo"
                        | "fails"
                        | "each"
                        | "for"
                )
            })
        }
        "bench" if second.is_none_or(|s| matches!(s, "runIf" | "skipIf")) => {
            members.next().is_none()
        }
        "bench" => second
            .into_iter()
            .chain(members)
            .any(|member| matches!(member, "skip" | "only" | "todo")),
        "beforeAll" | "afterAll" | "beforeEach" | "afterEach" | "fdescribe" | "fit" => {
            members.next().is_none()
        }
        "xdescribe" | "xit" | "xtest" => {
            second.is_none_or(|member| member == "each") && members.next().is_none()
        }

        _ => false,
    }
}

#[test]
fn test_is_valid_vitest_call() {
    const VALID_VITEST_FN_CALL_CHAINS: &[&str] = &[
        "afterAll",
        "afterEach",
        "beforeAll",
        "beforeEach",
        "bench",
        "bench.only",
        "bench.only.skip",
        "bench.only.skip.todo",
        "bench.only.todo",
        "bench.only.todo.skip",
        "bench.runIf",
        "bench.skip",
        "bench.skip.only",
        "bench.skip.only.todo",
        "bench.skip.todo",
        "bench.skip.todo.only",
        "bench.skipIf",
        "bench.todo",
        "bench.todo.only",
        "bench.todo.only.skip",
        "bench.todo.skip",
        "bench.todo.skip.only",
        "describe",
        "describe.concurrent",
        "describe.concurrent.each",
        "describe.concurrent.only",
        "describe.concurrent.only.each",
        "describe.concurrent.only.sequential",
        "describe.concurrent.only.shuffle",
        "describe.concurrent.only.skip",
        "describe.concurrent.only.todo",
        "describe.concurrent.sequential",
        "describe.concurrent.sequential.each",
        "describe.concurrent.sequential.only",
        "describe.concurrent.sequential.shuffle",
        "describe.concurrent.sequential.skip",
        "describe.concurrent.sequential.todo",
        "describe.concurrent.shuffle",
        "describe.concurrent.shuffle.each",
        "describe.concurrent.shuffle.only",
        "describe.concurrent.shuffle.sequential",
        "describe.concurrent.shuffle.skip",
        "describe.concurrent.shuffle.todo",
        "describe.concurrent.skip",
        "describe.concurrent.skip.each",
        "describe.concurrent.skip.only",
        "describe.concurrent.skip.sequential",
        "describe.concurrent.skip.shuffle",
        "describe.concurrent.skip.todo",
        "describe.concurrent.todo",
        "describe.concurrent.todo.each",
        "describe.concurrent.todo.only",
        "describe.concurrent.todo.sequential",
        "describe.concurrent.todo.shuffle",
        "describe.concurrent.todo.skip",
        "describe.each",
        "describe.only",
        "describe.only.concurrent",
        "describe.only.concurrent.each",
        "describe.only.concurrent.sequential",
        "describe.only.concurrent.shuffle",
        "describe.only.concurrent.skip",
        "describe.only.concurrent.todo",
        "describe.only.each",
        "describe.only.sequential",
        "describe.only.sequential.concurrent",
        "describe.only.sequential.each",
        "describe.only.sequential.shuffle",
        "describe.only.sequential.skip",
        "describe.only.sequential.todo",
        "describe.only.shuffle",
        "describe.only.shuffle.concurrent",
        "describe.only.shuffle.each",
        "describe.only.shuffle.sequential",
        "describe.only.shuffle.skip",
        "describe.only.shuffle.todo",
        "describe.only.skip",
        "describe.only.skip.concurrent",
        "describe.only.skip.each",
        "describe.only.skip.sequential",
        "describe.only.skip.shuffle",
        "describe.only.skip.todo",
        "describe.only.todo",
        "describe.only.todo.concurrent",
        "describe.only.todo.each",
        "describe.only.todo.sequential",
        "describe.only.todo.shuffle",
        "describe.only.todo.skip",
        "describe.runIf",
        "describe.sequential",
        "describe.sequential.concurrent",
        "describe.sequential.concurrent.each",
        "describe.sequential.concurrent.only",
        "describe.sequential.concurrent.shuffle",
        "describe.sequential.concurrent.skip",
        "describe.sequential.concurrent.todo",
        "describe.sequential.each",
        "describe.sequential.only",
        "describe.sequential.only.concurrent",
        "describe.sequential.only.each",
        "describe.sequential.only.shuffle",
        "describe.sequential.only.skip",
        "describe.sequential.only.todo",
        "describe.sequential.shuffle",
        "describe.sequential.shuffle.concurrent",
        "describe.sequential.shuffle.each",
        "describe.sequential.shuffle.only",
        "describe.sequential.shuffle.skip",
        "describe.sequential.shuffle.todo",
        "describe.sequential.skip",
        "describe.sequential.skip.concurrent",
        "describe.sequential.skip.each",
        "describe.sequential.skip.only",
        "describe.sequential.skip.shuffle",
        "describe.sequential.skip.todo",
        "describe.sequential.todo",
        "describe.sequential.todo.concurrent",
        "describe.sequential.todo.each",
        "describe.sequential.todo.only",
        "describe.sequential.todo.shuffle",
        "describe.sequential.todo.skip",
        "describe.shuffle",
        "describe.shuffle.concurrent",
        "describe.shuffle.concurrent.each",
        "describe.shuffle.concurrent.only",
        "describe.shuffle.concurrent.sequential",
        "describe.shuffle.concurrent.skip",
        "describe.shuffle.concurrent.todo",
        "describe.shuffle.each",
        "describe.shuffle.only",
        "describe.shuffle.only.concurrent",
        "describe.shuffle.only.each",
        "describe.shuffle.only.sequential",
        "describe.shuffle.only.skip",
        "describe.shuffle.only.todo",
        "describe.shuffle.sequential",
        "describe.shuffle.sequential.concurrent",
        "describe.shuffle.sequential.each",
        "describe.shuffle.sequential.only",
        "describe.shuffle.sequential.skip",
        "describe.shuffle.sequential.todo",
        "describe.shuffle.skip",
        "describe.shuffle.skip.concurrent",
        "describe.shuffle.skip.each",
        "describe.shuffle.skip.only",
        "describe.shuffle.skip.sequential",
        "describe.shuffle.skip.todo",
        "describe.shuffle.todo",
        "describe.shuffle.todo.concurrent",
        "describe.shuffle.todo.each",
        "describe.shuffle.todo.only",
        "describe.shuffle.todo.sequential",
        "describe.shuffle.todo.skip",
        "describe.skip",
        "describe.skip.concurrent",
        "describe.skip.concurrent.each",
        "describe.skip.concurrent.only",
        "describe.skip.concurrent.sequential",
        "describe.skip.concurrent.shuffle",
        "describe.skip.concurrent.todo",
        "describe.skip.each",
        "describe.skip.only",
        "describe.skip.only.concurrent",
        "describe.skip.only.each",
        "describe.skip.only.sequential",
        "describe.skip.only.shuffle",
        "describe.skip.only.todo",
        "describe.skip.sequential",
        "describe.skip.sequential.concurrent",
        "describe.skip.sequential.each",
        "describe.skip.sequential.only",
        "describe.skip.sequential.shuffle",
        "describe.skip.sequential.todo",
        "describe.skip.shuffle",
        "describe.skip.shuffle.concurrent",
        "describe.skip.shuffle.each",
        "describe.skip.shuffle.only",
        "describe.skip.shuffle.sequential",
        "describe.skip.shuffle.todo",
        "describe.skip.todo",
        "describe.skip.todo.concurrent",
        "describe.skip.todo.each",
        "describe.skip.todo.only",
        "describe.skip.todo.sequential",
        "describe.skip.todo.shuffle",
        "describe.skipIf",
        "describe.todo",
        "describe.todo.concurrent",
        "describe.todo.concurrent.each",
        "describe.todo.concurrent.only",
        "describe.todo.concurrent.sequential",
        "describe.todo.concurrent.shuffle",
        "describe.todo.concurrent.skip",
        "describe.todo.each",
        "describe.todo.only",
        "describe.todo.only.concurrent",
        "describe.todo.only.each",
        "describe.todo.only.sequential",
        "describe.todo.only.shuffle",
        "describe.todo.only.skip",
        "describe.todo.sequential",
        "describe.todo.sequential.concurrent",
        "describe.todo.sequential.each",
        "describe.todo.sequential.only",
        "describe.todo.sequential.shuffle",
        "describe.todo.sequential.skip",
        "describe.todo.shuffle",
        "describe.todo.shuffle.concurrent",
        "describe.todo.shuffle.each",
        "describe.todo.shuffle.only",
        "describe.todo.shuffle.sequential",
        "describe.todo.shuffle.skip",
        "describe.todo.skip",
        "describe.todo.skip.concurrent",
        "describe.todo.skip.each",
        "describe.todo.skip.only",
        "describe.todo.skip.sequential",
        "describe.todo.skip.shuffle",
        "fdescribe",
        "fit",
        "it",
        "it.concurrent",
        "it.concurrent.each",
        "it.concurrent.fails",
        "it.concurrent.fails.each",
        "it.concurrent.fails.only",
        "it.concurrent.fails.sequential",
        "it.concurrent.fails.skip",
        "it.concurrent.fails.todo",
        "it.concurrent.only",
        "it.concurrent.only.each",
        "it.concurrent.only.fails",
        "it.concurrent.only.sequential",
        "it.concurrent.only.skip",
        "it.concurrent.only.todo",
        "it.concurrent.sequential",
        "it.concurrent.sequential.each",
        "it.concurrent.sequential.fails",
        "it.concurrent.sequential.only",
        "it.concurrent.sequential.skip",
        "it.concurrent.sequential.todo",
        "it.concurrent.skip",
        "it.concurrent.skip.each",
        "it.concurrent.skip.fails",
        "it.concurrent.skip.only",
        "it.concurrent.skip.sequential",
        "it.concurrent.skip.todo",
        "it.concurrent.todo",
        "it.concurrent.todo.each",
        "it.concurrent.todo.fails",
        "it.concurrent.todo.only",
        "it.concurrent.todo.sequential",
        "it.concurrent.todo.skip",
        "it.each",
        "it.extend",
        "it.fails",
        "it.fails.concurrent",
        "it.fails.concurrent.each",
        "it.fails.concurrent.only",
        "it.fails.concurrent.sequential",
        "it.fails.concurrent.skip",
        "it.fails.concurrent.todo",
        "it.fails.each",
        "it.fails.only",
        "it.fails.only.concurrent",
        "it.fails.only.each",
        "it.fails.only.sequential",
        "it.fails.only.skip",
        "it.fails.only.todo",
        "it.fails.sequential",
        "it.fails.sequential.concurrent",
        "it.fails.sequential.each",
        "it.fails.sequential.only",
        "it.fails.sequential.skip",
        "it.fails.sequential.todo",
        "it.fails.skip",
        "it.fails.skip.concurrent",
        "it.fails.skip.each",
        "it.fails.skip.only",
        "it.fails.skip.sequential",
        "it.fails.skip.todo",
        "it.fails.todo",
        "it.fails.todo.concurrent",
        "it.fails.todo.each",
        "it.fails.todo.only",
        "it.fails.todo.sequential",
        "it.fails.todo.skip",
        "it.only",
        "it.only.concurrent",
        "it.only.concurrent.each",
        "it.only.concurrent.fails",
        "it.only.concurrent.sequential",
        "it.only.concurrent.skip",
        "it.only.concurrent.todo",
        "it.only.each",
        "it.only.fails",
        "it.only.fails.concurrent",
        "it.only.fails.each",
        "it.only.fails.sequential",
        "it.only.fails.skip",
        "it.only.fails.todo",
        "it.only.sequential",
        "it.only.sequential.concurrent",
        "it.only.sequential.each",
        "it.only.sequential.fails",
        "it.only.sequential.skip",
        "it.only.sequential.todo",
        "it.only.skip",
        "it.only.skip.concurrent",
        "it.only.skip.each",
        "it.only.skip.fails",
        "it.only.skip.sequential",
        "it.only.skip.todo",
        "it.only.todo",
        "it.only.todo.concurrent",
        "it.only.todo.each",
        "it.only.todo.fails",
        "it.only.todo.sequential",
        "it.only.todo.skip",
        "it.runIf",
        "it.sequential",
        "it.sequential.concurrent",
        "it.sequential.concurrent.each",
        "it.sequential.concurrent.fails",
        "it.sequential.concurrent.only",
        "it.sequential.concurrent.skip",
        "it.sequential.concurrent.todo",
        "it.sequential.each",
        "it.sequential.fails",
        "it.sequential.fails.concurrent",
        "it.sequential.fails.each",
        "it.sequential.fails.only",
        "it.sequential.fails.skip",
        "it.sequential.fails.todo",
        "it.sequential.only",
        "it.sequential.only.concurrent",
        "it.sequential.only.each",
        "it.sequential.only.fails",
        "it.sequential.only.skip",
        "it.sequential.only.todo",
        "it.sequential.skip",
        "it.sequential.skip.concurrent",
        "it.sequential.skip.each",
        "it.sequential.skip.fails",
        "it.sequential.skip.only",
        "it.sequential.skip.todo",
        "it.sequential.todo",
        "it.sequential.todo.concurrent",
        "it.sequential.todo.each",
        "it.sequential.todo.fails",
        "it.sequential.todo.only",
        "it.sequential.todo.skip",
        "it.skip",
        "it.skip.concurrent",
        "it.skip.concurrent.each",
        "it.skip.concurrent.fails",
        "it.skip.concurrent.only",
        "it.skip.concurrent.sequential",
        "it.skip.concurrent.todo",
        "it.skip.each",
        "it.skip.fails",
        "it.skip.fails.concurrent",
        "it.skip.fails.each",
        "it.skip.fails.only",
        "it.skip.fails.sequential",
        "it.skip.fails.todo",
        "it.skip.only",
        "it.skip.only.concurrent",
        "it.skip.only.each",
        "it.skip.only.fails",
        "it.skip.only.sequential",
        "it.skip.only.todo",
        "it.skip.sequential",
        "it.skip.sequential.concurrent",
        "it.skip.sequential.each",
        "it.skip.sequential.fails",
        "it.skip.sequential.only",
        "it.skip.sequential.todo",
        "it.skip.todo",
        "it.skip.todo.concurrent",
        "it.skip.todo.each",
        "it.skip.todo.fails",
        "it.skip.todo.only",
        "it.skip.todo.sequential",
        "it.skipIf",
        "it.todo",
        "it.todo.concurrent",
        "it.todo.concurrent.each",
        "it.todo.concurrent.fails",
        "it.todo.concurrent.only",
        "it.todo.concurrent.sequential",
        "it.todo.concurrent.skip",
        "it.todo.each",
        "it.todo.fails",
        "it.todo.fails.concurrent",
        "it.todo.fails.each",
        "it.todo.fails.only",
        "it.todo.fails.sequential",
        "it.todo.fails.skip",
        "it.todo.only",
        "it.todo.only.concurrent",
        "it.todo.only.each",
        "it.todo.only.fails",
        "it.todo.only.sequential",
        "it.todo.only.skip",
        "it.todo.sequential",
        "it.todo.sequential.concurrent",
        "it.todo.sequential.each",
        "it.todo.sequential.fails",
        "it.todo.sequential.only",
        "it.todo.sequential.skip",
        "it.todo.skip",
        "it.todo.skip.concurrent",
        "it.todo.skip.each",
        "it.todo.skip.fails",
        "it.todo.skip.only",
        "it.todo.skip.sequential",
        "suite",
        "suite.concurrent",
        "suite.concurrent.each",
        "suite.concurrent.only",
        "suite.concurrent.only.each",
        "suite.concurrent.only.sequential",
        "suite.concurrent.only.shuffle",
        "suite.concurrent.only.skip",
        "suite.concurrent.only.todo",
        "suite.concurrent.sequential",
        "suite.concurrent.sequential.each",
        "suite.concurrent.sequential.only",
        "suite.concurrent.sequential.shuffle",
        "suite.concurrent.sequential.skip",
        "suite.concurrent.sequential.todo",
        "suite.concurrent.shuffle",
        "suite.concurrent.shuffle.each",
        "suite.concurrent.shuffle.only",
        "suite.concurrent.shuffle.sequential",
        "suite.concurrent.shuffle.skip",
        "suite.concurrent.shuffle.todo",
        "suite.concurrent.skip",
        "suite.concurrent.skip.each",
        "suite.concurrent.skip.only",
        "suite.concurrent.skip.sequential",
        "suite.concurrent.skip.shuffle",
        "suite.concurrent.skip.todo",
        "suite.concurrent.todo",
        "suite.concurrent.todo.each",
        "suite.concurrent.todo.only",
        "suite.concurrent.todo.sequential",
        "suite.concurrent.todo.shuffle",
        "suite.concurrent.todo.skip",
        "suite.each",
        "suite.only",
        "suite.only.concurrent",
        "suite.only.concurrent.each",
        "suite.only.concurrent.sequential",
        "suite.only.concurrent.shuffle",
        "suite.only.concurrent.skip",
        "suite.only.concurrent.todo",
        "suite.only.each",
        "suite.only.sequential",
        "suite.only.sequential.concurrent",
        "suite.only.sequential.each",
        "suite.only.sequential.shuffle",
        "suite.only.sequential.skip",
        "suite.only.sequential.todo",
        "suite.only.shuffle",
        "suite.only.shuffle.concurrent",
        "suite.only.shuffle.each",
        "suite.only.shuffle.sequential",
        "suite.only.shuffle.skip",
        "suite.only.shuffle.todo",
        "suite.only.skip",
        "suite.only.skip.concurrent",
        "suite.only.skip.each",
        "suite.only.skip.sequential",
        "suite.only.skip.shuffle",
        "suite.only.skip.todo",
        "suite.only.todo",
        "suite.only.todo.concurrent",
        "suite.only.todo.each",
        "suite.only.todo.sequential",
        "suite.only.todo.shuffle",
        "suite.only.todo.skip",
        "suite.runIf",
        "suite.sequential",
        "suite.sequential.concurrent",
        "suite.sequential.concurrent.each",
        "suite.sequential.concurrent.only",
        "suite.sequential.concurrent.shuffle",
        "suite.sequential.concurrent.skip",
        "suite.sequential.concurrent.todo",
        "suite.sequential.each",
        "suite.sequential.only",
        "suite.sequential.only.concurrent",
        "suite.sequential.only.each",
        "suite.sequential.only.shuffle",
        "suite.sequential.only.skip",
        "suite.sequential.only.todo",
        "suite.sequential.shuffle",
        "suite.sequential.shuffle.concurrent",
        "suite.sequential.shuffle.each",
        "suite.sequential.shuffle.only",
        "suite.sequential.shuffle.skip",
        "suite.sequential.shuffle.todo",
        "suite.sequential.skip",
        "suite.sequential.skip.concurrent",
        "suite.sequential.skip.each",
        "suite.sequential.skip.only",
        "suite.sequential.skip.shuffle",
        "suite.sequential.skip.todo",
        "suite.sequential.todo",
        "suite.sequential.todo.concurrent",
        "suite.sequential.todo.each",
        "suite.sequential.todo.only",
        "suite.sequential.todo.shuffle",
        "suite.sequential.todo.skip",
        "suite.shuffle",
        "suite.shuffle.concurrent",
        "suite.shuffle.concurrent.each",
        "suite.shuffle.concurrent.only",
        "suite.shuffle.concurrent.sequential",
        "suite.shuffle.concurrent.skip",
        "suite.shuffle.concurrent.todo",
        "suite.shuffle.each",
        "suite.shuffle.only",
        "suite.shuffle.only.concurrent",
        "suite.shuffle.only.each",
        "suite.shuffle.only.sequential",
        "suite.shuffle.only.skip",
        "suite.shuffle.only.todo",
        "suite.shuffle.sequential",
        "suite.shuffle.sequential.concurrent",
        "suite.shuffle.sequential.each",
        "suite.shuffle.sequential.only",
        "suite.shuffle.sequential.skip",
        "suite.shuffle.sequential.todo",
        "suite.shuffle.skip",
        "suite.shuffle.skip.concurrent",
        "suite.shuffle.skip.each",
        "suite.shuffle.skip.only",
        "suite.shuffle.skip.sequential",
        "suite.shuffle.skip.todo",
        "suite.shuffle.todo",
        "suite.shuffle.todo.concurrent",
        "suite.shuffle.todo.each",
        "suite.shuffle.todo.only",
        "suite.shuffle.todo.sequential",
        "suite.shuffle.todo.skip",
        "suite.skip",
        "suite.skip.concurrent",
        "suite.skip.concurrent.each",
        "suite.skip.concurrent.only",
        "suite.skip.concurrent.sequential",
        "suite.skip.concurrent.shuffle",
        "suite.skip.concurrent.todo",
        "suite.skip.each",
        "suite.skip.only",
        "suite.skip.only.concurrent",
        "suite.skip.only.each",
        "suite.skip.only.sequential",
        "suite.skip.only.shuffle",
        "suite.skip.only.todo",
        "suite.skip.sequential",
        "suite.skip.sequential.concurrent",
        "suite.skip.sequential.each",
        "suite.skip.sequential.only",
        "suite.skip.sequential.shuffle",
        "suite.skip.sequential.todo",
        "suite.skip.shuffle",
        "suite.skip.shuffle.concurrent",
        "suite.skip.shuffle.each",
        "suite.skip.shuffle.only",
        "suite.skip.shuffle.sequential",
        "suite.skip.shuffle.todo",
        "suite.skip.todo",
        "suite.skip.todo.concurrent",
        "suite.skip.todo.each",
        "suite.skip.todo.only",
        "suite.skip.todo.sequential",
        "suite.skip.todo.shuffle",
        "suite.skipIf",
        "suite.todo",
        "suite.todo.concurrent",
        "suite.todo.concurrent.each",
        "suite.todo.concurrent.only",
        "suite.todo.concurrent.sequential",
        "suite.todo.concurrent.shuffle",
        "suite.todo.concurrent.skip",
        "suite.todo.each",
        "suite.todo.only",
        "suite.todo.only.concurrent",
        "suite.todo.only.each",
        "suite.todo.only.sequential",
        "suite.todo.only.shuffle",
        "suite.todo.only.skip",
        "suite.todo.sequential",
        "suite.todo.sequential.concurrent",
        "suite.todo.sequential.each",
        "suite.todo.sequential.only",
        "suite.todo.sequential.shuffle",
        "suite.todo.sequential.skip",
        "suite.todo.shuffle",
        "suite.todo.shuffle.concurrent",
        "suite.todo.shuffle.each",
        "suite.todo.shuffle.only",
        "suite.todo.shuffle.sequential",
        "suite.todo.shuffle.skip",
        "suite.todo.skip",
        "suite.todo.skip.concurrent",
        "suite.todo.skip.each",
        "suite.todo.skip.only",
        "suite.todo.skip.sequential",
        "suite.todo.skip.shuffle",
        "test",
        "test.concurrent",
        "test.concurrent.each",
        "test.concurrent.fails",
        "test.concurrent.fails.each",
        "test.concurrent.fails.only",
        "test.concurrent.fails.sequential",
        "test.concurrent.fails.skip",
        "test.concurrent.fails.todo",
        "test.concurrent.only",
        "test.concurrent.only.each",
        "test.concurrent.only.fails",
        "test.concurrent.only.sequential",
        "test.concurrent.only.skip",
        "test.concurrent.only.todo",
        "test.concurrent.sequential",
        "test.concurrent.sequential.each",
        "test.concurrent.sequential.fails",
        "test.concurrent.sequential.only",
        "test.concurrent.sequential.skip",
        "test.concurrent.sequential.todo",
        "test.concurrent.skip",
        "test.concurrent.skip.each",
        "test.concurrent.skip.fails",
        "test.concurrent.skip.only",
        "test.concurrent.skip.sequential",
        "test.concurrent.skip.todo",
        "test.concurrent.todo",
        "test.concurrent.todo.each",
        "test.concurrent.todo.fails",
        "test.concurrent.todo.only",
        "test.concurrent.todo.sequential",
        "test.concurrent.todo.skip",
        "test.each",
        "test.extend",
        "test.fails",
        "test.fails.concurrent",
        "test.fails.concurrent.each",
        "test.fails.concurrent.only",
        "test.fails.concurrent.sequential",
        "test.fails.concurrent.skip",
        "test.fails.concurrent.todo",
        "test.fails.each",
        "test.fails.only",
        "test.fails.only.concurrent",
        "test.fails.only.each",
        "test.fails.only.sequential",
        "test.fails.only.skip",
        "test.fails.only.todo",
        "test.fails.sequential",
        "test.fails.sequential.concurrent",
        "test.fails.sequential.each",
        "test.fails.sequential.only",
        "test.fails.sequential.skip",
        "test.fails.sequential.todo",
        "test.fails.skip",
        "test.fails.skip.concurrent",
        "test.fails.skip.each",
        "test.fails.skip.only",
        "test.fails.skip.sequential",
        "test.fails.skip.todo",
        "test.fails.todo",
        "test.fails.todo.concurrent",
        "test.fails.todo.each",
        "test.fails.todo.only",
        "test.fails.todo.sequential",
        "test.fails.todo.skip",
        "test.only",
        "test.only.concurrent",
        "test.only.concurrent.each",
        "test.only.concurrent.fails",
        "test.only.concurrent.sequential",
        "test.only.concurrent.skip",
        "test.only.concurrent.todo",
        "test.only.each",
        "test.only.fails",
        "test.only.fails.concurrent",
        "test.only.fails.each",
        "test.only.fails.sequential",
        "test.only.fails.skip",
        "test.only.fails.todo",
        "test.only.sequential",
        "test.only.sequential.concurrent",
        "test.only.sequential.each",
        "test.only.sequential.fails",
        "test.only.sequential.skip",
        "test.only.sequential.todo",
        "test.only.skip",
        "test.only.skip.concurrent",
        "test.only.skip.each",
        "test.only.skip.fails",
        "test.only.skip.sequential",
        "test.only.skip.todo",
        "test.only.todo",
        "test.only.todo.concurrent",
        "test.only.todo.each",
        "test.only.todo.fails",
        "test.only.todo.sequential",
        "test.only.todo.skip",
        "test.runIf",
        "test.sequential",
        "test.sequential.concurrent",
        "test.sequential.concurrent.each",
        "test.sequential.concurrent.fails",
        "test.sequential.concurrent.only",
        "test.sequential.concurrent.skip",
        "test.sequential.concurrent.todo",
        "test.sequential.each",
        "test.sequential.fails",
        "test.sequential.fails.concurrent",
        "test.sequential.fails.each",
        "test.sequential.fails.only",
        "test.sequential.fails.skip",
        "test.sequential.fails.todo",
        "test.sequential.only",
        "test.sequential.only.concurrent",
        "test.sequential.only.each",
        "test.sequential.only.fails",
        "test.sequential.only.skip",
        "test.sequential.only.todo",
        "test.sequential.skip",
        "test.sequential.skip.concurrent",
        "test.sequential.skip.each",
        "test.sequential.skip.fails",
        "test.sequential.skip.only",
        "test.sequential.skip.todo",
        "test.sequential.todo",
        "test.sequential.todo.concurrent",
        "test.sequential.todo.each",
        "test.sequential.todo.fails",
        "test.sequential.todo.only",
        "test.sequential.todo.skip",
        "test.skip",
        "test.skip.concurrent",
        "test.skip.concurrent.each",
        "test.skip.concurrent.fails",
        "test.skip.concurrent.only",
        "test.skip.concurrent.sequential",
        "test.skip.concurrent.todo",
        "test.skip.each",
        "test.skip.fails",
        "test.skip.fails.concurrent",
        "test.skip.fails.each",
        "test.skip.fails.only",
        "test.skip.fails.sequential",
        "test.skip.fails.todo",
        "test.skip.only",
        "test.skip.only.concurrent",
        "test.skip.only.each",
        "test.skip.only.fails",
        "test.skip.only.sequential",
        "test.skip.only.todo",
        "test.skip.sequential",
        "test.skip.sequential.concurrent",
        "test.skip.sequential.each",
        "test.skip.sequential.fails",
        "test.skip.sequential.only",
        "test.skip.sequential.todo",
        "test.skip.todo",
        "test.skip.todo.concurrent",
        "test.skip.todo.each",
        "test.skip.todo.fails",
        "test.skip.todo.only",
        "test.skip.todo.sequential",
        "test.skipIf",
        "test.todo",
        "test.todo.concurrent",
        "test.todo.concurrent.each",
        "test.todo.concurrent.fails",
        "test.todo.concurrent.only",
        "test.todo.concurrent.sequential",
        "test.todo.concurrent.skip",
        "test.todo.each",
        "test.todo.fails",
        "test.todo.fails.concurrent",
        "test.todo.fails.each",
        "test.todo.fails.only",
        "test.todo.fails.sequential",
        "test.todo.fails.skip",
        "test.todo.only",
        "test.todo.only.concurrent",
        "test.todo.only.each",
        "test.todo.only.fails",
        "test.todo.only.sequential",
        "test.todo.only.skip",
        "test.todo.sequential",
        "test.todo.sequential.concurrent",
        "test.todo.sequential.each",
        "test.todo.sequential.fails",
        "test.todo.sequential.only",
        "test.todo.sequential.skip",
        "test.todo.skip",
        "test.todo.skip.concurrent",
        "test.todo.skip.each",
        "test.todo.skip.fails",
        "test.todo.skip.only",
        "test.todo.skip.sequential",
        "xdescribe",
        "xdescribe.each",
        "xit",
        "xit.each",
        "xtest",
        "xtest.each",
    ];
    for call in VALID_VITEST_FN_CALL_CHAINS {
        let members: Vec<Cow<str>> = call.split('.').map(Cow::from).collect();
        assert!(is_valid_vitest_call(&members), "Failed for call: {call}");
    }
}
